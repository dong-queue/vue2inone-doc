{
  "intro": "The v-chip component is used to convey small pieces of information. Using the close property, the chip becomes interactive, allowing user interaction. This component is used by the v-chip-group for advanced selection options.",
  "closable": {
    "heading": "Closable",
    "intro": "<p>Closable chips can be controlled with a v-model. You can also listen to the <code>click:close</code> event if you want to know when a chip has been closed.</p>"
  },
  "colored": {
    "heading": "Colored",
    "intro": "<p>Any color from the Material Design palette can be used to change a chips color.</p>"
  },
  "draggable": {
    "heading": "Draggable",
    "intro": "<p><code>draggable</code> <code>v-chip</code> component can be dragged by mouse.</p>"
  },
  "filter": {
    "heading": "Filter",
    "intro": "<p><code>v-chip</code> component has <code>filter</code> option which shows an additional icon to you if chip is active. It can be customized using <code>filter-icon</code>.</p>"
  },
  "label": {
    "heading": "Label",
    "intro": "<p>Label chips use the <code>v-card</code> border-radius.</p>"
  },
  "noRipple": {
    "heading": "No ripple",
    "intro": "<p><code>v-chip</code> can be rendered without ripple if <code>ripple</code> prop is set to <code>false</code>.</p>"
  },
  "outlined": {
    "heading": "Outlined",
    "intro": "<p>Outlined chips inherit their border color from the current text color.</p>"
  },
  "sizes": {
    "heading": "Sizes",
    "intro": "<p><code>v-chip</code> component can have various sizes from <code>x-small</code> to <code>x-large</code>.</p>"
  },
  "action": {
    "heading": "Action chips",
    "intro": "<p>Chips can be used as actionable items. Provided with a <span style=`text-decoration: underline;`>click</span> event, the chip becomes interactive and can invoke methods.</p>"
  },
  "icon": {
    "heading": "Icon",
    "intro": "<p>Chips can use text or any icon available in the Material Icons font library.</p>"
  },
  "list": {
    "heading": "Custom list",
    "intro": "<p>In this example we opt to use a customized list instead of v-autocomplete. This allows us to always display the options available while still providing the same functionality of search and selection.</p>"
  },
  "expandable": {
    "heading": "Expandable",
    "intro": "<p>Chips can be combined with <code>v-menu</code> to enable a specific set of actions for a chip.</p>"
  },
  "filtering": {
    "heading": "Filtering",
    "intro": "<p>Chips are great for providing supplementary actions to a particular task. In this instance, we are searching a list of items and collecting a subset of information to display available keywords.</p>"
  },
  "inSelect": {
    "heading": "In selects",
    "intro": "<p>Selects can use chips to display the selected data. Try adding your own tags below.</p>"
  }
}